@* @page "{id:int}" *@
@page
@model Reviews.Areas.Identity.DetailsModel
@using MoviesLibraryData;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Details";
    
}

<h1>Details</h1>
<div>
    <h4>Movie</h4>
    <hr />

    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Movie.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Movie.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Movie.Director)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Movie.Director)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Movie.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Movie.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Movie.PosterUrl)
        </dt>
        <dd class="col-sm-10">
          @*   @Html.DisplayFor(model => model.Movie.PosterUrl) *@
            <img src=@Model.Movie.PosterUrl "class=" img-fluid img-thumbnail" width="200px" />
            @* <img src="@item.PosterUrl" class="img-fluid img-thumbnail" width="200px"/> *@

        </dd>
    </dl>
</div>

<div>
    @if (User.IsInRole("admin"))
    {
        <a asp-page="./Edit" asp-route-id="@Model.Movie.Id">Edit</a>
        <span>|</span>
    }
    <a asp-page="./Index">Back to Movie</a>
    <br />
</div>

<h1>Reviews</h1>

@if (SignInManager.IsSignedIn(User)) // если пользователь авторизован и админ
{
    if (Model.CurrentUserReview.Count == 0) // если пользователь не оставлял отзыв то даем ему форму заполнения отзыва + список всех остальных отзывов
    {
        <form method="post">
            <input hidden name="id" value=@Model.Movie.Id />
            <label asp-for="Review.Author" class="control-label"></label>
            <input asp-for="Review.Content" placeholder="content" />
            <input asp-for="Review.Rating" max="10" placeholder="rating" />
            <button type="submit">Submit</button>
        </form>
    }
    else if (Model.CurrentUserReview.Count != 0)// авторизован и оставлял отзыв показываем его отзыв
    {
        foreach (var item in Model.CurrentUserReview)
        {
            <ol>
                <li>@item.Author </li>
                <li>@item.Content </li>
                <li>@item.Rating </li>
                <li>@item.DatePublished </li>
            </ol>
        
            <form method="post" asp-page-handler="Delete">
                <input hidden name="id" value=@item.Id class="btn btn-danger" />
                <button style="background-color:red" type="submit">Delete </button>
            </form>

            <form method="get" asp-page="./EditReview">
                <input hidden name="id" value=@item.Id class="btn btn-danger" />
                <button style="background-color:red" type="submit">Edit </button><br />
                <a asp-page="./Index">Back to Movie</a>
            </form>
        }
    }
}
else // если пользователь не авторизован выводим ссылку на регистрацию
{
    <p1><a class="text-dark" id="login" asp-area="Identity" asp-page="/Account/Login"> Вам необходимо пройти авторизацтю!</a></p1>
}

@foreach (var item in Model.ReviewsList) // в конце выводим все отзывы кроме текущего пользователя с возможностью удаления каждого
{
    <ol>
        <li>@item.Author </li>
        <li>@item.Content </li>
        <li>@item.Rating </li>
        <li>@item.DatePublished </li>
    </ol>

    if (User.IsInRole("admin"))
    {
        <form method="post" asp-page-handler="Delete">
        <input hidden name="id" value=@item.Id />
        <button style="background-color:red" type="submit">Delete </button><br />
        <a asp-page="./Index">Back to Movie</a>
        </form>
    }
}
